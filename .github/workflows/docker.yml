name: 将Docker镜像打包下载

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name (e.g., ubuntu)'
        required: true
      image_tag:
        description: 'Docker image tag (e.g., 22.04)'
        required: true
        default: 'latest'
      platform:
        description: 'Docker image platform (e.g., linux/amd64, linux/arm64)'
        required: true
        default: 'linux/arm64'
      compression-level:
        description: 'The level of compression for Zlib to be applied to the artifact archive.The value can range from 0 to 9.'
        required: true
        default: '0'

jobs:
  export-and-share-docker-image:
    runs-on: Ubuntu-20.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        node-version: '20.x'
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        node-version: '20.x'
      
    - name: Pull Docker Image
      run: docker pull --platform=${{ github.event.inputs.platform }} ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
    
    - name: Export Docker Image
      run: |
        echo "当前目录是: $(pwd)"
        safe_image_name="$(echo ${{ github.event.inputs.image_name }} | tr '/' '_')"
        safe_image_platform="$(echo ${{ github.event.inputs.platform }} | tr '/' '_')"
        filename="${safe_image_platform}_${safe_image_name}_${{github.event.inputs.image_tag}}.tar"
        echo "filename=$filename"
        docker save -o /tmp/$filename ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
        echo "date2=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
        echo "filename=$filename" >> $GITHUB_ENV

    - name: 上传
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: ${{env.filename}}
        path: /tmp/${{env.filename}}
        compression-level: ${{ github.event.inputs.compression-level }} # 0 no compression

    - name: 下载地址
      run:  echo 'Artifact url is ${{ steps.artifact-upload-step.outputs.artifact-url }}'
      
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
        
    - name: 自动发布
      uses: ncipollo/release-action@main
      with:
        name: ❤️ ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
        allowUpdates: true
        tag: ${{ env.date2 }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          镜像简介：
            架构：${{ github.event.inputs.platform }}
            镜像：${{ github.event.inputs.image_name }}
            标签：${{ github.event.inputs.image_tag }}
        artifacts: "/tmp/${{env.filename}}"
