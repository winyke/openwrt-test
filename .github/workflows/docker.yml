name: 将Docker镜像打包下载

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name (e.g., ubuntu)'
        required: true
      image_tag:
        description: 'Docker image tag (e.g., 22.04)'
        required: true
        default: 'latest'
      platform:
        description: 'Docker image platform (e.g., linux/amd64, linux/arm64)'
        required: true
        default: 'linux/arm64'

jobs:
  export-and-share-docker-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        node-version: '20.x'
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        node-version: '20.x'
      
    - name: Pull Docker Image
      run: docker pull --platform=${{ github.event.inputs.platform }} ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
    
    - name: Export Docker Image
      run: |
        docker save -o /tmp/image.tar ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
        echo "date2=$(date "+%Y%m%d-%H%M")" >> $GITHUB_ENV
        echo "当前目录是: $(pwd)"
    - name: action-file.io
      uses: heowc/action-file.io@0.2.0
      with:
        # Base location for finding file
        position: /tmp
        # File name to be created
        file_path: image.tar

          
    - name: 自动发布
      uses: ncipollo/release-action@main
      with:
        name: ❤️ ${{ github.event.inputs.image_name }} 
        allowUpdates: true
        tag: ${{ env.date2 }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          镜像简介：
            架构：${{ github.event.inputs.platform }}
            镜像：${{ github.event.inputs.image_name }}
            标签：${{ github.event.inputs.image_tag }}
        artifacts: "/tmp/image.tar"
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2
